name: Build, Push and Deploy to VM

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_IMAGE: luggage-ai
  DOCKER_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Output image digest
      run: echo ${{ steps.build.outputs.digest }}

  deploy-to-vm:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to VM
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        key: ${{ secrets.VM_SSH_KEY }}
        script: |
          # Update the deployment script
          cd /opt/luggage-ai
          
          # Pull the latest image
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
          
          # Stop existing container if running
          docker stop luggage-ai-app || true
          docker rm luggage-ai-app || true
          
          # Run the new container
          docker run -d \
            --name luggage-ai-app \
            --restart unless-stopped \
            -p 8501:8501 \
            -v /opt/luggage-ai/dataset:/workspace/dataset \
            -e STREAMLIT_SERVER_PORT=8501 \
            -e STREAMLIT_SERVER_ADDRESS=0.0.0.0 \
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
          
          # Clean up old images
          docker image prune -f
          
          echo "Deployment completed successfully!"

    - name: Health Check
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        key: ${{ secrets.VM_SSH_KEY }}
        script: |
          # Wait for container to start
          sleep 10
          
          # Check if container is running
          if docker ps | grep -q luggage-ai-app; then
            echo "✅ Container is running successfully!"
            docker ps | grep luggage-ai-app
          else
            echo "❌ Container failed to start!"
            docker logs luggage-ai-app
            exit 1
          fi
          
          # Check if the application is responding
          if curl -f http://localhost:8501/_stcore/health > /dev/null 2>&1; then
            echo "✅ Application is healthy and responding!"
          else
            echo "⚠️ Application may not be fully ready yet"
          fi

# Required GitHub Secrets:
# DOCKER_USERNAME - Your Docker Hub username
# DOCKER_TOKEN - Your Docker Hub access token (not password)
# VM_HOST - Your VM's IP address or hostname
# VM_USERNAME - SSH username for your VM
# VM_SSH_KEY - Private SSH key for VM access
